# Reminders for linux system tools and command options
>> Messing around with the system itself
* reboot  # reboots the system (gracefully)
* sudo systemctl start sshd  # start ssh service for external access
* udisksctl mount --block-device=/dev/<device-name>  # Mount a device the way nemo would. No need for mkdir (and nemo can dismount it right), no harm in calling while unnecessary, automatically uses LABEL to mount at /media/<username>/
*   udisksctl mount --block-device=/dev/<device-name> 2> /dev/null
>> configurations
* /etc/default/grub  :  boot configurations
* /etc/modprobe.d/blacklist.conf  :  blacklist modules, such as firmware
* /etc/fstab  :  mounting configurations, including for dir /
* /etc/environment  :  OS environment variables
*   printenv  # print (all) current environment variables 
* sudo nvidia-xconfig  # create new xorg config, used by nvidia driver
>> configurations (GNOME)
* ~/.config/autostart/  :  location of startup scripts that run for your own user after startup 
* ~/Templates/  :  anything you put in this folder will be a new-file template when you right-click in nemo
>> configurations (Nemo file-manager)
* ~/.local/share/nemo/scripts/  :  anything you put in this folder will be an executable-script available when you right-click in nemo
>> logs (to tail a logfile in real-time run: "tail -f <logfile>", or to get last 100 lines: "tail -100 <logfile>" )
* /var/log/boot.log  :  System boot log
* /var/log/syslog  :  System-events log (like connection of a USB device)
* /var/log/auth.log  :  Login-attempts log
* /var/log/dmesg  :  log for kernel ring buffer
*   dmesg -k | grep -E "warn|error"  # dmesg displays kernel logs buffer
* /var/log/kern.log  :  log for kernel ring buffer
* /var/log/btmp  :  also could be "wtmp"; it's a binary file for login/logout events, and it can't be read directly
*   last  # read binary log of login/logout events. Use "lastb" (like so: `sudo lastb -adF` ) to only read bad events.
* journalctl  # inspect systemd logs (like so: `journalctl -u <service-name>`, you can add -f to follow)
>> working with devices (disks/volumes)
* wipefs -a /dev/<sd??>  # remove filesystem data; removes RAID metadata
