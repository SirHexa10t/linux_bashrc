# a list of interesting dangerous security flaws in programs

>> un-safety in Rust
* https://github.com/rust-lang/rust/issues
*   Specifically this decade-old issue, about lifetime of a reference to a lifetime with paradoxical lifetime lengths, that avoids deletion and causes you to read garbage https://github.com/rust-lang/rust/issues/25860
    ``` static UNIT: &'static &'static () = &&();
        
        fn foo<'a, 'b, T>(_: &'a &'b (), v: &'b T) -> &'a T { v }
        
        fn bad<'a, T>(x: &'a T) -> &'static T {
            let f: fn(_, &'a T) -> &'static T = foo;
            f(UNIT, x)
        }
*       video coverage: "Safe Rust AIN'T SAFE?!(cve-rs)"  https://www.youtube.com/watch?v=vfMpIsJwpjU
*       continuation: "Safe Rust AIN'T EASY!? (*fixing* cve-rs)" https://www.youtube.com/watch?v=fdu6OcQX5gE


